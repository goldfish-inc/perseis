# Pulumi ESC Environment Configuration for Perseis ML Pipeline
# 2025 Best Practices: Dynamic secrets from 1Password with proper RBAC
# Deploy with: esc env edit default/perseis-secrets

values:
  # 1Password Dynamic Secrets Provider (2025 Best Practice)
  1password:
    secrets:
      fn::open::1password-secrets:
        login:
          serviceAccountToken:
            fn::secret: "REPLACE_WITH_1PASSWORD_SERVICE_ACCOUNT_TOKEN"
        get:
          # Infrastructure secrets
          ubuntu-pro-token:
            ref: "op://Infrastructure/Ubuntu Pro License/token"
          k3s-cluster-token:
            ref: "op://Infrastructure/Oceanid Cluster - k3s Control Plane/token"
          ssh-public-key:
            ref: "op://Private/Macbook Pro SSH Key/public key"
          workstation-password-hash:
            ref: "op://Infrastructure/Workstation Credentials/password hash"

          # Database credentials
          postgres-password:
            ref: "op://Infrastructure/PostgreSQL Credentials/password"

          # Object storage
          minio-access-key:
            ref: "op://Infrastructure/MinIO Credentials/access key"
          minio-secret-key:
            ref: "op://Infrastructure/MinIO Credentials/secret key"

          # ML Platform tokens
          huggingface-token:
            ref: "op://Private/Hugging Face API/token"

          # Application secrets with rotation support
          airflow-fernet-key:
            ref: "op://Infrastructure/Airflow Secrets/fernet key"
          airflow-fernet-key-previous:
            ref: "op://Infrastructure/Airflow Secrets/fernet key previous"
          airflow-admin-password:
            ref: "op://Infrastructure/Airflow Secrets/admin password"
          grafana-admin-password:
            ref: "op://Infrastructure/Grafana Secrets/admin password"

          # Database credentials with rotation
          postgres-password:
            ref: "op://Infrastructure/PostgreSQL Credentials/password"
          postgres-password-previous:
            ref: "op://Infrastructure/PostgreSQL Credentials/password previous"

          # WiFi credentials for workstation setup
          wifi-password:
            ref: "op://Private/IM-OLD-GREG WIFI/password"

  # Database Configuration
  postgres:
    password: ${1password.secrets.postgres-password}
    database: tradedb
    host: postgres-postgresql.ml-pipeline.svc.cluster.local
    port: 5432

  # Object Storage Configuration
  minio:
    access_key: ${1password.secrets.minio-access-key}
    secret_key: ${1password.secrets.minio-secret-key}
    endpoint: http://minio.ml-pipeline.svc.cluster.local:9000
    buckets:
      - raw-trade-data
      - processed-data
      - models

  # ML Platform Configuration
  huggingface:
    token: ${1password.secrets.huggingface-token}

  # Ubuntu and System Configuration
  ubuntu:
    pro_token: ${1password.secrets.ubuntu-pro-token}

  # SSH Configuration
  ssh:
    public_key: ${1password.secrets.ssh-public-key}

  # Workstation Configuration
  workstation:
    username: mlops
    password_hash: ${1password.secrets.workstation-password-hash}

  # k3s Cluster Configuration
  k3s:
    cluster_token: ${1password.secrets.k3s-cluster-token}
    server_url: https://tethys.boathou.se:6443

  # Airflow Configuration (2025 Security Best Practices)
  airflow:
    # ESC-managed Fernet key rotation (current,previous for zero-downtime)
    fernet_key: ${1password.secrets.airflow-fernet-key}
    fernet_key_previous: ${1password.secrets.airflow-fernet-key-previous}
    admin_password: ${1password.secrets.airflow-admin-password}

    # External secrets backend configuration
    secrets_backend: "airflow.providers.pulumi.secrets.esc_secrets.ESCSecretsBackend"
    secrets_backend_kwargs:
      esc_environment: "default/perseis-secrets"
      connections_prefix: "airflow/connections"
      variables_prefix: "airflow/variables"

  # Grafana Configuration
  grafana:
    admin_password: ${1password.secrets.grafana-admin-password}

  # WiFi Configuration
  wifi:
    ssid: "IM-OLD-GREG"
    password: ${1password.secrets.wifi-password}

  # Cluster Node Configuration
  cluster:
    kubeconfig_path: /Users/rt/Developer/oceanid/cluster/kubeconfig.yaml
    nodes:
      control_plane: tethys.boathou.se  # Hostinger VPS
      worker1: styx.boathou.se          # Hostinger VPS
      worker2: meliae.boathou.se        # Oracle Cloud (future)
      gpu_workstation: calypso          # RTX 4090 workstation

  # Environment Variables for Applications (2025 Best Practice)
  environmentVariables:
    # Database
    POSTGRES_PASSWORD: ${postgres.password}
    POSTGRES_HOST: ${postgres.host}
    POSTGRES_DB: ${postgres.database}

    # Storage
    MINIO_ACCESS_KEY: ${minio.access_key}
    MINIO_SECRET_KEY: ${minio.secret_key}
    MINIO_ENDPOINT: ${minio.endpoint}

    # ML Platform
    HF_TOKEN: ${huggingface.token}

    # System
    UBUNTU_PRO_TOKEN: ${ubuntu.pro_token}
    K3S_TOKEN: ${k3s.cluster_token}
    K3S_URL: ${k3s.server_url}
    SSH_PUBLIC_KEY: ${ssh.public_key}

    # Application
    AIRFLOW_FERNET_KEY: ${airflow.fernet_key}

    # WiFi
    WIFI_SSID: ${wifi.ssid}
    WIFI_PASSWORD: ${wifi.password}

  # Pulumi Configuration (2025 Best Practice: Use ESC values)
  pulumiConfig:
    perseis:postgresPassword: ${postgres.password}
    perseis:minioAccessKey: ${minio.access_key}
    perseis:minioSecretKey: ${minio.secret_key}
    perseis:huggingfaceToken: ${huggingface.token}
    perseis:airflowFernetKey: ${airflow.fernet_key}
    perseis:airflowPassword: ${airflow.admin_password}
    perseis:grafanaPassword: ${grafana.admin_password}
    perseis:kubeconfig: ${cluster.kubeconfig_path}
    perseis:ubuntuProToken: ${ubuntu.pro_token}
    perseis:k3sToken: ${k3s.cluster_token}
    perseis:sshPublicKey: ${ssh.public_key}